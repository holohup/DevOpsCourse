name: Test, Build and Push

on:
  push:
    branches-ignore:
      - main

jobs:
  super-linter:
    runs-on: ubuntu-latest
    env:
      SL_IMAGE: github/super-linter/slim:v6     # pin the tag
      SL_CACHE_DIR: /tmp/super-linter-cache
      SL_CACHE_FILE: superlinter.tar
    steps:
      # 1. Checkout
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      # 2. Try to restore the image tarball
      - name: Restore cached Super-Linter image
        id: cache-sl
        uses: actions/cache@v3
        with:
          path: ${{ env.SL_CACHE_DIR }}
          key: sl-${{ runner.os }}-${{ env.SL_IMAGE }}

      # 3. Load the image if we have a cache hit
      - name: docker load
        if: steps.cache-sl.outputs.cache-hit == 'true'
        run: |
          docker load -i $SL_CACHE_FILE

      # 4. Pull the image if cache miss
      - name: docker pull
        if: steps.cache-sl.outputs.cache-hit != 'true'
        run: |
          docker pull $SL_IMAGE

      # 5. Save the freshly-pulled image back to cache (miss only)
      - name: Save image to cache
        if: steps.cache-sl.outputs.cache-hit != 'true'
        run: |
          mkdir -p $SL_CACHE_DIR
          docker save $SL_IMAGE -o $SL_CACHE_FILE

      # 6. Run Super-Linter
      - name: Code quality checks
        uses: github/super-linter/slim@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BRANCH: main
          VALIDATE_ALL_CODEBASE: false
          JAVASCRIPT_ES_LINTER_RULES_PATH: ""

  build_image_and_push_to_docker_hub:
    needs: super-linter
    name: Build and Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: check out repo
        uses: actions/checkout@v4

      # ---------- Build & push ----------
      - name: log in to docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: build and push backend to DockerHub
        uses: docker/build-push-action@v6
        with:
          context: backend
          push: true
          tags: ${{ vars.BACKEND_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: build and push frontend to DockerHub
        uses: docker/build-push-action@v6
        with:
          context: frontend
          push: true
          tags: ${{ vars.FRONTEND_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max